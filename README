Babby's first toy lisp (scheme) interpreter

Based on the examples given in the SICP videos
(http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/)

See test.txt, closure.txt for example code
To build and run the code, do

$ make
$ ./lisp <test.txt

Interactive REPL mode is accessed thusly:
$ lisp -i
]=> 

Optionally, composite car/cdr primitives (like caddr) can be built thusly:

$ python gen-cadr.py >prefix.txt 


There are some important things missing; see `TODO'

-----------------------------------

Some notes on special features
==============================

I. Parenthesis autocomplete:

you type a big expression in the REPL, then hit return with 
an empty line and the missing parentheses will be automatically
added

]=> (define (bob x)
...    (cond ((= x 0) 123
...          ((= x 1) 456
...             
... ))))

		~~~~~~~~

II. Auto-indent

The REPL auto-indents
