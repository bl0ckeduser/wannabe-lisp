- implement let* (I don't even know what it does)
- have `map' builtin, perhaps via the prefix file
- parse the various "." notations
	"." for rest in lambda/define is now supported

- strings, floats ?

- syntax modification macros !!11!

- '23 should evaluate to 23 (r6rs.pdf, section 1.10, page 8)

- vectors

- call/cc would be a nice feature.
  I've read about building scheme interpreters/compilers in the "PAIP" book
  (http://norvig.com/paip.html) and IIRC it seems that the simplest way to get
  call/cc working is to write a stack-based bytecode VM... Unfortunately
  this project currently isn't a stack-based bytecode VM
